{
  "compilerOptions": {
    "target": "ESNext", 
    "module": "nodenext",  // Defines the module system. "nodenext" allows support for ES Modules in Node.js with native module resolution.
    "moduleResolution": "nodenext", // Resolves modules in the way Node.js does (ES Modules and CommonJS)
    "outDir": "./dist", // Directory where compiled JavaScript files will be output
    "rootDir": "./src", // Root directory for TypeScript source files
    "esModuleInterop": true, // Allows default imports from modules with no default export (like CommonJS modules)
    "strict": true, // Enables all strict type-checking options
    "skipLibCheck": true, // Skip type checking of declaration files (.d.ts)
    "allowJs": true, // Allows JavaScript files to be compiled along with TypeScript files
    "resolveJsonModule": true, // Allows importing JSON files as modules
    "isolatedModules": true, // Ensures that each file can be transpiled independently
    "typeRoots": ["./node_modules/@types", "./src/types"], // Specifies directories to search for type definitions
    "baseUrl": "./src", // Base directory for resolving non-relative module imports
    "paths": {
      "*": ["src/types/*"] // Maps custom paths for module resolution (e.g., `import x from 'types/x'`)
    },
    "types": ["node"], // Include Node.js type definitions
    "sourceMap": true, // Generates source maps for debugging
    "declaration": true, // Generates .d.ts declaration files for TypeScript types
    "removeComments": false, // Retains comments in the output JavaScript files
    "noEmitOnError": true, // Prevents emitting JavaScript files if there are type errors
    "incremental": true, // Enables incremental compilation for faster builds after the initial compilation
    "inlineSources": true, // Embeds the source code in the source maps for better debugging
    "noImplicitAny": true, // Disallows variables and parameters with the `any` type
    "noUnusedLocals": true, // Disallows unused local variables
    "noUnusedParameters": true, // Disallows unused function parameters,
    "noImplicitThis": true,
  },
  "include": ["src/**/*", "dbconfig/databaseSequelize.js", "swagger.js", "loadModels.js"], // Includes all source files and specific JavaScript files
  "exclude": ["node_modules", "dist", "**/*.spec.ts", "**/*.test.ts"] // Excludes node_modules, build output, and test files
}
